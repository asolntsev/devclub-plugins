plugins {
  id 'java'
}

ext {
  encoding = 'UTF-8'
  selenideVersion = '7.9.3'
  liquibaseVersion = '4.32.0'
  postgreVersion = '42.7.7'
  junitVersion = '5.13.1'
  mockitoVersion = '5.18.0'
  assertjVersion = '3.27.3'
  slf4jVersion = '2.0.17'
}

dependencies {
  implementation "com.codeborne:selenide:$selenideVersion"
  implementation("org.liquibase:liquibase-core:$liquibaseVersion") { exclude group: "org.yaml" }
  implementation "org.postgresql:postgresql:$postgreVersion"

  testImplementation platform("org.junit:junit-bom:$junitVersion")
  testImplementation "org.junit.jupiter:junit-jupiter"
  testImplementation "org.junit.jupiter:junit-jupiter-engine"
  testImplementation "org.junit.platform:junit-platform-engine"
  testImplementation "org.junit.platform:junit-platform-launcher"

  testImplementation "org.mockito:mockito-core:$mockitoVersion"
  testImplementation "org.assertj:assertj-core:$assertjVersion"

  runtimeOnly "org.slf4j:slf4j-simple:$slf4jVersion"
}

group = 'eu.devclub'
version = '1.0.0-SNAPSHOT'

defaultTasks 'check'

tasks.withType(JavaCompile).configureEach {
  options.encoding = encoding
  options.debug = true
  options.release = 17
  sourceCompatibility = 17
}
compileJava.options.debugOptions.debugLevel = "source,lines,vars"

repositories {
  mavenCentral()
}

test {
  include 'eu/devclub/**/*'
}

tasks.withType(Test).configureEach {
  useJUnitPlatform()
  jvmArgs = ['-ea', '-Xmx512m']
  systemProperties['user.language'] = 'FR'
  systemProperties["selenide.headless"] = project.properties["headless"] ?: "false"
  systemProperties['file.encoding'] = encoding
}

